<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ygo.dao.CardMapper">
  <resultMap id="BaseResultMap" type="com.example.ygo.entity.Card">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="ban" jdbcType="VARCHAR" property="ban" />
    <result column="locale" jdbcType="VARCHAR" property="locale" />
    <result column="type_f" jdbcType="VARCHAR" property="typeF" />
    <result column="type_c" jdbcType="VARCHAR" property="typeC" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="attribute" jdbcType="VARCHAR" property="attribute" />
    <result column="race" jdbcType="VARCHAR" property="race" />
    <result column="atk" jdbcType="VARCHAR" property="atk" />
    <result column="def" jdbcType="VARCHAR" property="def" />
    <result column="pend" jdbcType="INTEGER" property="pend" />
    <result column="link" jdbcType="INTEGER" property="link" />
    <result column="link_arrow" jdbcType="VARCHAR" property="linkArrow" />
    <result column="pend_desc" jdbcType="VARCHAR" property="pendDesc" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="rare" jdbcType="VARCHAR" property="rare" />
    <result column="href" jdbcType="VARCHAR" property="href" />
    <result column="like_num" jdbcType="BIGINT" property="likeNum" />
    <result column="view_num" jdbcType="BIGINT" property="viewNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, password, name, ban, locale, type_f, type_c, pic, level, attribute, race, atk, 
    def, pend, link, link_arrow, pend_desc, desc, rare, href, like_num, view_num, create_time, 
    update_time, delete_time, status
  </sql>
  <select id="selectByExample" parameterType="com.example.ygo.entity.CardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from y_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from y_card
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example != null and example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from y_card
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from y_card
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from y_card
    where id = #{id,jdbcType=BIGINT}
      and status = 
    <choose>
      <when test="andLogicalDeleted">
        0
      </when>
      <otherwise>
        1
      </otherwise>
    </choose>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from y_card
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.ygo.entity.CardExample">
    delete from y_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.ygo.entity.Card">
    insert into y_card (id, password, name, 
      ban, locale, type_f, 
      type_c, pic, level, 
      attribute, race, atk, 
      def, pend, link, link_arrow, 
      pend_desc, desc, rare, 
      href, like_num, view_num, 
      create_time, update_time, delete_time, 
      status)
    values (#{id,jdbcType=BIGINT}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{ban,jdbcType=VARCHAR}, #{locale,jdbcType=VARCHAR}, #{typeF,jdbcType=VARCHAR}, 
      #{typeC,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{attribute,jdbcType=VARCHAR}, #{race,jdbcType=VARCHAR}, #{atk,jdbcType=VARCHAR}, 
      #{def,jdbcType=VARCHAR}, #{pend,jdbcType=INTEGER}, #{link,jdbcType=INTEGER}, #{linkArrow,jdbcType=VARCHAR}, 
      #{pendDesc,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{rare,jdbcType=VARCHAR}, 
      #{href,jdbcType=VARCHAR}, #{likeNum,jdbcType=BIGINT}, #{viewNum,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleteTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into y_card
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.password != null">
            password,
          </if>
          <if test="record.name != null">
            name,
          </if>
          <if test="record.ban != null">
            ban,
          </if>
          <if test="record.locale != null">
            locale,
          </if>
          <if test="record.typeF != null">
            type_f,
          </if>
          <if test="record.typeC != null">
            type_c,
          </if>
          <if test="record.pic != null">
            pic,
          </if>
          <if test="record.level != null">
            level,
          </if>
          <if test="record.attribute != null">
            attribute,
          </if>
          <if test="record.race != null">
            race,
          </if>
          <if test="record.atk != null">
            atk,
          </if>
          <if test="record.def != null">
            def,
          </if>
          <if test="record.pend != null">
            pend,
          </if>
          <if test="record.link != null">
            link,
          </if>
          <if test="record.linkArrow != null">
            link_arrow,
          </if>
          <if test="record.pendDesc != null">
            pend_desc,
          </if>
          <if test="record.desc != null">
            desc,
          </if>
          <if test="record.rare != null">
            rare,
          </if>
          <if test="record.href != null">
            href,
          </if>
          <if test="record.likeNum != null">
            like_num,
          </if>
          <if test="record.viewNum != null">
            view_num,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.deleteTime != null">
            delete_time,
          </if>
          <if test="record.status != null">
            status,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.password != null">
            #{record.password,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.ban != null">
            #{record.ban,jdbcType=VARCHAR},
          </if>
          <if test="record.locale != null">
            #{record.locale,jdbcType=VARCHAR},
          </if>
          <if test="record.typeF != null">
            #{record.typeF,jdbcType=VARCHAR},
          </if>
          <if test="record.typeC != null">
            #{record.typeC,jdbcType=VARCHAR},
          </if>
          <if test="record.pic != null">
            #{record.pic,jdbcType=VARCHAR},
          </if>
          <if test="record.level != null">
            #{record.level,jdbcType=INTEGER},
          </if>
          <if test="record.attribute != null">
            #{record.attribute,jdbcType=VARCHAR},
          </if>
          <if test="record.race != null">
            #{record.race,jdbcType=VARCHAR},
          </if>
          <if test="record.atk != null">
            #{record.atk,jdbcType=VARCHAR},
          </if>
          <if test="record.def != null">
            #{record.def,jdbcType=VARCHAR},
          </if>
          <if test="record.pend != null">
            #{record.pend,jdbcType=INTEGER},
          </if>
          <if test="record.link != null">
            #{record.link,jdbcType=INTEGER},
          </if>
          <if test="record.linkArrow != null">
            #{record.linkArrow,jdbcType=VARCHAR},
          </if>
          <if test="record.pendDesc != null">
            #{record.pendDesc,jdbcType=VARCHAR},
          </if>
          <if test="record.desc != null">
            #{record.desc,jdbcType=VARCHAR},
          </if>
          <if test="record.rare != null">
            #{record.rare,jdbcType=VARCHAR},
          </if>
          <if test="record.href != null">
            #{record.href,jdbcType=VARCHAR},
          </if>
          <if test="record.likeNum != null">
            #{record.likeNum,jdbcType=BIGINT},
          </if>
          <if test="record.viewNum != null">
            #{record.viewNum,jdbcType=BIGINT},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.deleteTime != null">
            #{record.deleteTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.status != null">
            #{record.status,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.example.ygo.entity.CardExample" resultType="java.lang.Long">
    select count(*) from y_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update y_card
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.password != null">
            password = #{record.password,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.ban != null">
            ban = #{record.ban,jdbcType=VARCHAR},
          </if>
          <if test="record.locale != null">
            locale = #{record.locale,jdbcType=VARCHAR},
          </if>
          <if test="record.typeF != null">
            type_f = #{record.typeF,jdbcType=VARCHAR},
          </if>
          <if test="record.typeC != null">
            type_c = #{record.typeC,jdbcType=VARCHAR},
          </if>
          <if test="record.pic != null">
            pic = #{record.pic,jdbcType=VARCHAR},
          </if>
          <if test="record.level != null">
            level = #{record.level,jdbcType=INTEGER},
          </if>
          <if test="record.attribute != null">
            attribute = #{record.attribute,jdbcType=VARCHAR},
          </if>
          <if test="record.race != null">
            race = #{record.race,jdbcType=VARCHAR},
          </if>
          <if test="record.atk != null">
            atk = #{record.atk,jdbcType=VARCHAR},
          </if>
          <if test="record.def != null">
            def = #{record.def,jdbcType=VARCHAR},
          </if>
          <if test="record.pend != null">
            pend = #{record.pend,jdbcType=INTEGER},
          </if>
          <if test="record.link != null">
            link = #{record.link,jdbcType=INTEGER},
          </if>
          <if test="record.linkArrow != null">
            link_arrow = #{record.linkArrow,jdbcType=VARCHAR},
          </if>
          <if test="record.pendDesc != null">
            pend_desc = #{record.pendDesc,jdbcType=VARCHAR},
          </if>
          <if test="record.desc != null">
            desc = #{record.desc,jdbcType=VARCHAR},
          </if>
          <if test="record.rare != null">
            rare = #{record.rare,jdbcType=VARCHAR},
          </if>
          <if test="record.href != null">
            href = #{record.href,jdbcType=VARCHAR},
          </if>
          <if test="record.likeNum != null">
            like_num = #{record.likeNum,jdbcType=BIGINT},
          </if>
          <if test="record.viewNum != null">
            view_num = #{record.viewNum,jdbcType=BIGINT},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.deleteTime != null">
            delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update y_card
    set id = #{record.id,jdbcType=BIGINT},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      ban = #{record.ban,jdbcType=VARCHAR},
      locale = #{record.locale,jdbcType=VARCHAR},
      type_f = #{record.typeF,jdbcType=VARCHAR},
      type_c = #{record.typeC,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      attribute = #{record.attribute,jdbcType=VARCHAR},
      race = #{record.race,jdbcType=VARCHAR},
      atk = #{record.atk,jdbcType=VARCHAR},
      def = #{record.def,jdbcType=VARCHAR},
      pend = #{record.pend,jdbcType=INTEGER},
      link = #{record.link,jdbcType=INTEGER},
      link_arrow = #{record.linkArrow,jdbcType=VARCHAR},
      pend_desc = #{record.pendDesc,jdbcType=VARCHAR},
      desc = #{record.desc,jdbcType=VARCHAR},
      rare = #{record.rare,jdbcType=VARCHAR},
      href = #{record.href,jdbcType=VARCHAR},
      like_num = #{record.likeNum,jdbcType=BIGINT},
      view_num = #{record.viewNum,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update y_card
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.password != null">
            password = #{record.password,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.ban != null">
            ban = #{record.ban,jdbcType=VARCHAR},
          </if>
          <if test="record.locale != null">
            locale = #{record.locale,jdbcType=VARCHAR},
          </if>
          <if test="record.typeF != null">
            type_f = #{record.typeF,jdbcType=VARCHAR},
          </if>
          <if test="record.typeC != null">
            type_c = #{record.typeC,jdbcType=VARCHAR},
          </if>
          <if test="record.pic != null">
            pic = #{record.pic,jdbcType=VARCHAR},
          </if>
          <if test="record.level != null">
            level = #{record.level,jdbcType=INTEGER},
          </if>
          <if test="record.attribute != null">
            attribute = #{record.attribute,jdbcType=VARCHAR},
          </if>
          <if test="record.race != null">
            race = #{record.race,jdbcType=VARCHAR},
          </if>
          <if test="record.atk != null">
            atk = #{record.atk,jdbcType=VARCHAR},
          </if>
          <if test="record.def != null">
            def = #{record.def,jdbcType=VARCHAR},
          </if>
          <if test="record.pend != null">
            pend = #{record.pend,jdbcType=INTEGER},
          </if>
          <if test="record.link != null">
            link = #{record.link,jdbcType=INTEGER},
          </if>
          <if test="record.linkArrow != null">
            link_arrow = #{record.linkArrow,jdbcType=VARCHAR},
          </if>
          <if test="record.pendDesc != null">
            pend_desc = #{record.pendDesc,jdbcType=VARCHAR},
          </if>
          <if test="record.desc != null">
            desc = #{record.desc,jdbcType=VARCHAR},
          </if>
          <if test="record.rare != null">
            rare = #{record.rare,jdbcType=VARCHAR},
          </if>
          <if test="record.href != null">
            href = #{record.href,jdbcType=VARCHAR},
          </if>
          <if test="record.likeNum != null">
            like_num = #{record.likeNum,jdbcType=BIGINT},
          </if>
          <if test="record.viewNum != null">
            view_num = #{record.viewNum,jdbcType=BIGINT},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.deleteTime != null">
            delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.ygo.entity.Card">
    update y_card
    set password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      ban = #{ban,jdbcType=VARCHAR},
      locale = #{locale,jdbcType=VARCHAR},
      type_f = #{typeF,jdbcType=VARCHAR},
      type_c = #{typeC,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      attribute = #{attribute,jdbcType=VARCHAR},
      race = #{race,jdbcType=VARCHAR},
      atk = #{atk,jdbcType=VARCHAR},
      def = #{def,jdbcType=VARCHAR},
      pend = #{pend,jdbcType=INTEGER},
      link = #{link,jdbcType=INTEGER},
      link_arrow = #{linkArrow,jdbcType=VARCHAR},
      pend_desc = #{pendDesc,jdbcType=VARCHAR},
      desc = #{desc,jdbcType=VARCHAR},
      rare = #{rare,jdbcType=VARCHAR},
      href = #{href,jdbcType=VARCHAR},
      like_num = #{likeNum,jdbcType=BIGINT},
      view_num = #{viewNum,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.example.ygo.entity.CardExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from y_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from y_card
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into y_card
    (id, password, name, ban, locale, type_f, type_c, pic, level, attribute, race, atk, 
      def, pend, link, link_arrow, pend_desc, desc, rare, href, like_num, view_num, create_time, 
      update_time, delete_time, status)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.password,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, 
        #{item.ban,jdbcType=VARCHAR}, #{item.locale,jdbcType=VARCHAR}, #{item.typeF,jdbcType=VARCHAR}, 
        #{item.typeC,jdbcType=VARCHAR}, #{item.pic,jdbcType=VARCHAR}, #{item.level,jdbcType=INTEGER}, 
        #{item.attribute,jdbcType=VARCHAR}, #{item.race,jdbcType=VARCHAR}, #{item.atk,jdbcType=VARCHAR}, 
        #{item.def,jdbcType=VARCHAR}, #{item.pend,jdbcType=INTEGER}, #{item.link,jdbcType=INTEGER}, 
        #{item.linkArrow,jdbcType=VARCHAR}, #{item.pendDesc,jdbcType=VARCHAR}, #{item.desc,jdbcType=VARCHAR}, 
        #{item.rare,jdbcType=VARCHAR}, #{item.href,jdbcType=VARCHAR}, #{item.likeNum,jdbcType=BIGINT}, 
        #{item.viewNum,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.deleteTime,jdbcType=TIMESTAMP}, #{item.status,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into y_card (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'password'.toString() == column.value">
          #{item.password,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'ban'.toString() == column.value">
          #{item.ban,jdbcType=VARCHAR}
        </if>
        <if test="'locale'.toString() == column.value">
          #{item.locale,jdbcType=VARCHAR}
        </if>
        <if test="'type_f'.toString() == column.value">
          #{item.typeF,jdbcType=VARCHAR}
        </if>
        <if test="'type_c'.toString() == column.value">
          #{item.typeC,jdbcType=VARCHAR}
        </if>
        <if test="'pic'.toString() == column.value">
          #{item.pic,jdbcType=VARCHAR}
        </if>
        <if test="'level'.toString() == column.value">
          #{item.level,jdbcType=INTEGER}
        </if>
        <if test="'attribute'.toString() == column.value">
          #{item.attribute,jdbcType=VARCHAR}
        </if>
        <if test="'race'.toString() == column.value">
          #{item.race,jdbcType=VARCHAR}
        </if>
        <if test="'atk'.toString() == column.value">
          #{item.atk,jdbcType=VARCHAR}
        </if>
        <if test="'def'.toString() == column.value">
          #{item.def,jdbcType=VARCHAR}
        </if>
        <if test="'pend'.toString() == column.value">
          #{item.pend,jdbcType=INTEGER}
        </if>
        <if test="'link'.toString() == column.value">
          #{item.link,jdbcType=INTEGER}
        </if>
        <if test="'link_arrow'.toString() == column.value">
          #{item.linkArrow,jdbcType=VARCHAR}
        </if>
        <if test="'pend_desc'.toString() == column.value">
          #{item.pendDesc,jdbcType=VARCHAR}
        </if>
        <if test="'desc'.toString() == column.value">
          #{item.desc,jdbcType=VARCHAR}
        </if>
        <if test="'rare'.toString() == column.value">
          #{item.rare,jdbcType=VARCHAR}
        </if>
        <if test="'href'.toString() == column.value">
          #{item.href,jdbcType=VARCHAR}
        </if>
        <if test="'like_num'.toString() == column.value">
          #{item.likeNum,jdbcType=BIGINT}
        </if>
        <if test="'view_num'.toString() == column.value">
          #{item.viewNum,jdbcType=BIGINT}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'delete_time'.toString() == column.value">
          #{item.deleteTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <update id="logicalDeleteByExample" parameterType="map">
    update y_card set status = 0
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Long">
    update y_card set status = 0
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>